{"ast":null,"code":"function getSelectionSortAnimations(array) {\n  let animations = [];\n  let startIdx = 0;\n\n  while (startIdx < array.length - 1) {\n    let smallestIdx = startIdx;\n\n    for (let i = startIdx + 1; i < array.length; i++) {\n      if (array[smallestIdx] > array[i]) smallestIdx = i;\n    }\n\n    swap(startIdx, smallestIdx, array, animations);\n    startIdx++;\n  }\n\n  return array;\n}\n\nfunction swap(i, j, array, animations) {\n  const temp = array[j]; // These are the values that we're comparing; we push them once\n  // to change their color.\n\n  animations.push([i, j]); // These are the values that we're comparing; we push them once\n  // to change their color.\n\n  animations.push([i, j]); // we overwrite the value at index j with value from array at index i\n  // we overwrite the value at index i with value from array at index j\n\n  animations.push([[j, array[i]], [i, array[j]]]);\n  array[j] = array[i];\n  array[i] = temp;\n}\n\nexport { getSelectionSortAnimations };","map":{"version":3,"sources":["/Users/nikitaizmailov/js/react-sort-project/sorting-algorithms/src/sortingAlgorithms/selectionSortLogic.js"],"names":["getSelectionSortAnimations","array","animations","startIdx","length","smallestIdx","i","swap","j","temp","push"],"mappings":"AAAA,SAASA,0BAAT,CAAoCC,KAApC,EAA2C;AACvC,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,QAAQ,GAAG,CAAf;;AACA,SAAOA,QAAQ,GAAGF,KAAK,CAACG,MAAN,GAAe,CAAjC,EAAoC;AAChC,QAAIC,WAAW,GAAGF,QAAlB;;AACA,SAAK,IAAIG,CAAC,GAAGH,QAAQ,GAAG,CAAxB,EAA2BG,CAAC,GAAGL,KAAK,CAACG,MAArC,EAA6CE,CAAC,EAA9C,EAAkD;AAC9C,UAAIL,KAAK,CAACI,WAAD,CAAL,GAAqBJ,KAAK,CAACK,CAAD,CAA9B,EAAmCD,WAAW,GAAGC,CAAd;AACtC;;AACDC,IAAAA,IAAI,CAACJ,QAAD,EAAWE,WAAX,EAAwBJ,KAAxB,EAA+BC,UAA/B,CAAJ;AACAC,IAAAA,QAAQ;AACX;;AACD,SAAOF,KAAP;AACH;;AAED,SAASM,IAAT,CAAcD,CAAd,EAAiBE,CAAjB,EAAoBP,KAApB,EAA2BC,UAA3B,EAAuC;AACnC,QAAMO,IAAI,GAAGR,KAAK,CAACO,CAAD,CAAlB,CADmC,CAGnC;AACA;;AACAN,EAAAA,UAAU,CAACQ,IAAX,CAAgB,CAACJ,CAAD,EAAIE,CAAJ,CAAhB,EALmC,CAOnC;AACA;;AACAN,EAAAA,UAAU,CAACQ,IAAX,CAAgB,CAACJ,CAAD,EAAIE,CAAJ,CAAhB,EATmC,CAWnC;AACA;;AACAN,EAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,CAACF,CAAD,EAAIP,KAAK,CAACK,CAAD,CAAT,CAAD,EAAgB,CAACA,CAAD,EAAIL,KAAK,CAACO,CAAD,CAAT,CAAhB,CAAhB;AAEAP,EAAAA,KAAK,CAACO,CAAD,CAAL,GAAWP,KAAK,CAACK,CAAD,CAAhB;AACAL,EAAAA,KAAK,CAACK,CAAD,CAAL,GAAWG,IAAX;AACH;;AAED,SAAQT,0BAAR","sourcesContent":["function getSelectionSortAnimations(array) {\n    let animations = [];\n    let startIdx = 0;\n    while (startIdx < array.length - 1) {\n        let smallestIdx = startIdx;\n        for (let i = startIdx + 1; i < array.length; i++) {\n            if (array[smallestIdx] > array[i]) smallestIdx = i;\n        }\n        swap(startIdx, smallestIdx, array, animations);\n        startIdx++;\n    }\n    return array;\n}\n\nfunction swap(i, j, array, animations) {\n    const temp = array[j];\n\n    // These are the values that we're comparing; we push them once\n    // to change their color.\n    animations.push([i, j]);\n\n    // These are the values that we're comparing; we push them once\n    // to change their color.\n    animations.push([i, j]);\n    \n    // we overwrite the value at index j with value from array at index i\n    // we overwrite the value at index i with value from array at index j\n    animations.push([[j, array[i]], [i, array[j]]]);\n\n    array[j] = array[i];\n    array[i] = temp;\n}\n\nexport {getSelectionSortAnimations};"]},"metadata":{},"sourceType":"module"}