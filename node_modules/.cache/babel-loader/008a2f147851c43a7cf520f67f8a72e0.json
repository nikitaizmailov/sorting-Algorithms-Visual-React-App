{"ast":null,"code":"export function getBubbleSortAnimations(array) {\n  const animations = [];\n  let isSorted = false;\n  let counter = 0;\n\n  while (!isSorted) {\n    isSorted = true;\n\n    for (let i = 0; i < array.length - 1 - counter; i++) {\n      // // These are the values that we're comparing; we push them once\n      // // to change their color.\n      // animations.push([i, i+1]);\n      // // These are the values that we're comparing; we push them once\n      // // to change their color.\n      // animations.push([i, i+1]);\n      if (array[i] > array[i + 1]) {\n        swap(i, i + 1, array, animations);\n        isSorted = false;\n      }\n    }\n\n    counter++;\n  }\n\n  return animations;\n}\n\nfunction swap(i, j, array, animations) {\n  const temp = array[j]; // we overwrite the value at index j with value from array at index i\n  // we overwrite the value at index i with value from array at index j\n\n  animations.push([[j, array[i]], [i, array[j]]]);\n  array[j] = array[i];\n  array[i] = temp;\n}","map":{"version":3,"sources":["/Users/nikitaizmailov/js/react-sort-project/sorting-algorithms/src/sortingAlgorithms/bubbleSortLogic.js"],"names":["getBubbleSortAnimations","array","animations","isSorted","counter","i","length","swap","j","temp","push"],"mappings":"AAAA,OAAO,SAASA,uBAAT,CAAiCC,KAAjC,EAAwC;AAC3C,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAIC,QAAQ,GAAG,KAAf;AACA,MAAIC,OAAO,GAAG,CAAd;;AACA,SAAO,CAACD,QAAR,EAAkB;AACdA,IAAAA,QAAQ,GAAG,IAAX;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAAN,GAAe,CAAf,GAAmBF,OAAvC,EAAgDC,CAAC,EAAjD,EAAqD;AACjD;AACA;AACA;AAEA;AACA;AACA;AACA,UAAIJ,KAAK,CAACI,CAAD,CAAL,GAAWJ,KAAK,CAACI,CAAC,GAAG,CAAL,CAApB,EAA6B;AACzBE,QAAAA,IAAI,CAACF,CAAD,EAAIA,CAAC,GAAG,CAAR,EAAWJ,KAAX,EAAkBC,UAAlB,CAAJ;AACAC,QAAAA,QAAQ,GAAG,KAAX;AACH;AACJ;;AACDC,IAAAA,OAAO;AACV;;AACD,SAAOF,UAAP;AACH;;AAED,SAASK,IAAT,CAAcF,CAAd,EAAiBG,CAAjB,EAAoBP,KAApB,EAA2BC,UAA3B,EAAuC;AACnC,QAAMO,IAAI,GAAGR,KAAK,CAACO,CAAD,CAAlB,CADmC,CAEnC;AACA;;AACAN,EAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,CAACF,CAAD,EAAIP,KAAK,CAACI,CAAD,CAAT,CAAD,EAAe,CAACA,CAAD,EAAIJ,KAAK,CAACO,CAAD,CAAT,CAAf,CAAhB;AAEAP,EAAAA,KAAK,CAACO,CAAD,CAAL,GAAWP,KAAK,CAACI,CAAD,CAAhB;AACAJ,EAAAA,KAAK,CAACI,CAAD,CAAL,GAAWI,IAAX;AACH","sourcesContent":["export function getBubbleSortAnimations(array) {\n    const animations = [];\n    let isSorted = false;\n    let counter = 0;\n    while (!isSorted) {\n        isSorted = true;\n        for (let i = 0; i < array.length - 1 - counter; i++) {\n            // // These are the values that we're comparing; we push them once\n            // // to change their color.\n            // animations.push([i, i+1]);\n\n            // // These are the values that we're comparing; we push them once\n            // // to change their color.\n            // animations.push([i, i+1]);\n            if (array[i] > array[i + 1]) {\n                swap(i, i + 1, array, animations);\n                isSorted = false;\n            }\n        }\n        counter++;\n    }\n    return animations;\n}\n\nfunction swap(i, j, array, animations) {\n    const temp = array[j];\n    // we overwrite the value at index j with value from array at index i\n    // we overwrite the value at index i with value from array at index j\n    animations.push([[j, array[i]],[i, array[j]]]);\n\n    array[j] = array[i];\n    array[i] = temp;\n}\n"]},"metadata":{},"sourceType":"module"}