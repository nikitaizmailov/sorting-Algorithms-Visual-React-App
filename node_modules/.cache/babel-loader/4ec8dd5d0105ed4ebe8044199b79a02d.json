{"ast":null,"code":"function getQuickSortAnimations(array) {\n  const animations = [];\n  quickSortHelper(array, 0, array.length - 1, animations);\n  return array;\n}\n\nfunction quickSortHelper(array, startIdx, endIdx, animations) {\n  if (startIdx >= endIdx) {\n    return;\n  }\n\n  const pivotIdx = startIdx;\n  let leftIdx = startIdx + 1;\n  let rightIdx = endIdx;\n\n  while (rightIdx >= leftIdx) {\n    if (array[leftIdx] > array[pivotIdx] && array[rightIdx] < array[pivotIdx]) {\n      swap(leftIdx, rightIdx, array);\n    }\n\n    if (array[leftIdx] <= array[pivotIdx]) leftIdx++;\n    if (array[rightIdx] >= array[pivotIdx]) rightIdx--;\n  }\n}\n\nexport { getQuickSortAnimations };","map":{"version":3,"sources":["/Users/nikitaizmailov/js/react-sort-project/sorting-algorithms/src/sortingAlgorithms/quickSortLogic.js"],"names":["getQuickSortAnimations","array","animations","quickSortHelper","length","startIdx","endIdx","pivotIdx","leftIdx","rightIdx","swap"],"mappings":"AAAA,SAASA,sBAAT,CAAgCC,KAAhC,EAAuC;AACnC,QAAMC,UAAU,GAAG,EAAnB;AACAC,EAAAA,eAAe,CAACF,KAAD,EAAQ,CAAR,EAAWA,KAAK,CAACG,MAAN,GAAe,CAA1B,EAA6BF,UAA7B,CAAf;AACA,SAAOD,KAAP;AACH;;AAED,SAASE,eAAT,CAAyBF,KAAzB,EAAgCI,QAAhC,EAA0CC,MAA1C,EAAkDJ,UAAlD,EAA8D;AAC1D,MAAIG,QAAQ,IAAIC,MAAhB,EAAwB;AACpB;AACH;;AACD,QAAMC,QAAQ,GAAGF,QAAjB;AACA,MAAIG,OAAO,GAAGH,QAAQ,GAAG,CAAzB;AACA,MAAII,QAAQ,GAAGH,MAAf;;AACA,SAAOG,QAAQ,IAAID,OAAnB,EAA4B;AACxB,QAAIP,KAAK,CAACO,OAAD,CAAL,GAAiBP,KAAK,CAACM,QAAD,CAAtB,IAAoCN,KAAK,CAACQ,QAAD,CAAL,GAAkBR,KAAK,CAACM,QAAD,CAA/D,EAA2E;AACvEG,MAAAA,IAAI,CAACF,OAAD,EAAUC,QAAV,EAAoBR,KAApB,CAAJ;AACH;;AACD,QAAIA,KAAK,CAACO,OAAD,CAAL,IAAkBP,KAAK,CAACM,QAAD,CAA3B,EAAuCC,OAAO;AAC9C,QAAIP,KAAK,CAACQ,QAAD,CAAL,IAAmBR,KAAK,CAACM,QAAD,CAA5B,EAAwCE,QAAQ;AACnD;AACJ;;AAED,SAAQT,sBAAR","sourcesContent":["function getQuickSortAnimations(array) {\n    const animations = [];\n    quickSortHelper(array, 0, array.length - 1, animations);\n    return array;\n}\n\nfunction quickSortHelper(array, startIdx, endIdx, animations) {\n    if (startIdx >= endIdx) {\n        return;\n    }\n    const pivotIdx = startIdx;\n    let leftIdx = startIdx + 1;\n    let rightIdx = endIdx;\n    while (rightIdx >= leftIdx) {\n        if (array[leftIdx] > array[pivotIdx] && array[rightIdx] < array[pivotIdx]) {\n            swap(leftIdx, rightIdx, array);\n        }\n        if (array[leftIdx] <= array[pivotIdx]) leftIdx++;\n        if (array[rightIdx] >= array[pivotIdx]) rightIdx--;\n    }\n}\n\nexport {getQuickSortAnimations};"]},"metadata":{},"sourceType":"module"}